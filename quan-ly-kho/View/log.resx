<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAABFxJREFUeF7t3VmoVVUcx3EbL6WmQWGKgUSF1UvRRCXmizlAvqTQnL0aWPRQUN2m
        lyB8SXxQInEgURERNZCgRBqIDAyz4aVJBFN7SAnK8Sv/7hL1h+m5l3P2+u+1/h84cDjD3r/135x99rTW
        HjYshBBCCCGEEMIFAbcBjwFvAkuAD9PDnttr9t6t+r3QJcDFwBRgKfAHndsLfAA8CFyk0w2DlBbEk8Au
        rfQQfAc8btPU+YQOAHcCX2tVu+Ar4A6dX/gftmoBngcOayW76Gj6r4lfy/kAlwOrtXo9tMrmqTnCwMLo
        A7ZoxRpg8+zTPFUDLgHWaaUatCZWX2dI6/PcXtNcVQImA8e0OhlYhkmaryrpT/wHrUxGtr9zmeasBvCC
        VsSB5zRnFdJW1R6thgO7q9wUTocxvHpU8xYv0z5Hpz7SvEUDRgBHtAqO2GGb4Zq7WMBMrYBD0zR3sYDX
        tfUOvaq5i5XO7nm3QnMXC9iqrXfoU81dLOAbbb1D2zV3sYBvtfUO7dDcxQI+19Y7tE1zFwvYoK13aL3m
        LhbwrrbeoXc0d7GAp7T1Dj2huYsFXK+td2i85i4a8L1WwJGdmrd4wCtaBUde0rzFA8YB/2olHPgHGKt5
        q5CuVvdmkeashv1xAoe0IhkdrPbXcQrwolYlo/marzqpy8HHWpkMPrErKDVflYAxwK9aoQb9DFyruaoG
        3Azs10o1YB9wk+YJAwtlIvC7VqyHfrN5ao5whrR/8plWrge2Vb9F1Sng0nRFfC92HG3Hr9/mofMNF2Dr
        9tRv5LhWdQhsGmuBG3U+YZCszzmwEDigVe6AbSi8F/3WeyCtyh5Iqxz75VhX5z/TlYb2sOc703v2Gfts
        rJpCCCGEEEIIIQfr7w1MBd5OA4/ZYYs2P6wNb6U2tacvexoMwIZXynFuoynWtvnuFwxwTTqsXYsvgeu0
        Di4AVwM/aeIK/AiM1npkB2zWpBXZqPXICpihCSv0kNYlGyeX8eS2ReuSBTDK+agMTbHzMVdpfRoH3KvJ
        Kna31qdxwCxNVbFZWp/GAXM0VcXmaH0aFwvkLC4WSKyyTnOxyrIrO8KA+7Q+jQNu0FQVm6D1ySLdp6N2
        e7Uu2aTzBbVbrXXJJv7Y/zNT65JNGkzfxrutlfUz8dUdDnhWU1bkaa1HdqnzZhtGiuu27W5vdZH6CXrq
        d95rfwO3aB1csZ+vpi7UCRsuXdvvktO7HnRbuwaoAd7QFhTCfhn92t5WAOb2+PZ3TbO2+NuiGgzgfuAX
        bVkL2WgP+Q8edoOdawbe71Jv2qZZZss+UtvVenbOOV3t1xZfAHdpO4pjd0MDNmnrHbGBnh+u7g7TwD1p
        VLm/tCIZWIbFLq4cyQ24EpgNLB/i4ABDZfNaBjwCXKG5wukjx7fb7euAlWlwgG5sOts0bFo2zXlpHr6O
        0LZFGsHBxj2ZDjwDvAwsSKs72wI61anGnttr9p59xj5r37HvxogOIYQQQgghhHAOJwGfSXfZSGXy+AAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>